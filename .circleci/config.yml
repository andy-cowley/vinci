# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:latest
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.8/site-packages
      - run: curl -Lsf https://github.com/BurntSushi/ripgrep/releases/download/11.0.2/ripgrep-11.0.2-x86_64-unknown-linux-musl.tar.gz | tar xvz --strip-components=1 ripgrep-11.0.2-x86_64-unknown-linux-musl/rg && mv rg /usr/local/bin
      - run: curl -Lsf https://github.com/jgm/pandoc/releases/download/2.9.1.1/pandoc-2.9.1.1-linux-amd64.tar.gz | tar xvz --strip-components 2 -C /usr/local/bin

      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: Set up Python Environment
          command: |
            sudo pip install pipenv
            pipenv install
            pipenv run pip install -r src/requirements.txt
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.8/site-packages"
      - run:
          name: Unit Tests
          command: |
            cd src
            pipenv run python -m unittest tests/test_MDFile.py
            pipenv run python -m unittest tests/test_web_server.py

      - setup_remote_docker:
          docker_layer_caching: false

      - run:
          name: Create Docker Image
          command: |
            export VERSION_TAG=v$(cat VERSION)-${CIRCLE_BUILD_NUM}
            export DEVELOPMENT_TAG=unstable
            export IMAGE_NAME=vinci
            docker build --build-arg BUILD_DATE=$(date +%x) --build-arg VERSION=${VERSION_TAG} -t andycowley/$IMAGE_NAME:$VERSION_TAG -t andycowley/$IMAGE_NAME:$DEVELOPMENT_TAG .
            docker login -u $DOCKER_USER -p $DOCKER_PWD
            docker push andycowley/$IMAGE_NAME:$VERSION_TAG
            docker push andycowley/$IMAGE_NAME:$DEVELOPMENT_TAG
  master:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:latest
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: false

      - run:
          name: Create Docker Image
          command: |
            export LATEST_TAG=latest
            export VERSION_TAG=v$(cat VERSION)
            export IMAGE_NAME=vinci
            docker build --build-arg BUILD_DATE=$(date +%x) --build-arg VERSION=${VERSION_TAG} -t andycowley/$IMAGE_NAME:$VERSION_TAG -t andycowley/$IMAGE_NAME:$LATEST_TAG .
            docker login -u $DOCKER_USER -p $DOCKER_PWD
            docker push andycowley/$IMAGE_NAME:$VERSION_TAG
            docker push andycowley/$IMAGE_NAME:$LATEST_TAG
workflows:
  version: 2
  workflow:
    jobs:
    - build
    - master:
        filters:
          branches:
            only:
              - master
